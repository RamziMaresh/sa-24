"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/i18next-http-backend";
exports.ids = ["vendor-chunks/i18next-http-backend"];
exports.modules = {

/***/ "(ssr)/./node_modules/i18next-http-backend/esm/getFetch.cjs":
/*!************************************************************!*\
  !*** ./node_modules/i18next-http-backend/esm/getFetch.cjs ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nvar fetchApi;\nif (typeof fetch === \"function\") {\n    if (typeof global !== \"undefined\" && global.fetch) {\n        fetchApi = global.fetch;\n    } else if (false) {} else {\n        fetchApi = fetch;\n    }\n}\nif (true) {\n    var f = fetchApi || __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n    if (f.default) f = f.default;\n    exports[\"default\"] = f;\n    module.exports = exports.default;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaTE4bmV4dC1odHRwLWJhY2tlbmQvZXNtL2dldEZldGNoLmNqcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUE7QUFDSixJQUFJLE9BQU9DLFVBQVUsWUFBWTtJQUMvQixJQUFJLE9BQU9DLFdBQVcsZUFBZUEsT0FBT0QsS0FBSyxFQUFFO1FBQ2pERCxXQUFXRSxPQUFPRCxLQUFLO0lBQ3pCLE9BQU8sSUFBSSxLQUE2QyxFQUFFLEVBRXpELE1BQU07UUFDTEQsV0FBV0M7SUFDYjtBQUNGO0FBRUEsSUFBSSxJQUFvRCxFQUFhO0lBQ25FLElBQUlJLElBQUlMLFlBQVlJLG1CQUFPQSxDQUFDO0lBQzVCLElBQUlDLEVBQUVDLE9BQU8sRUFBRUQsSUFBSUEsRUFBRUMsT0FBTztJQUM1QkMsa0JBQWUsR0FBR0Y7SUFDbEJHLE9BQU9ELE9BQU8sR0FBR0EsUUFBUUQsT0FBTztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZnJhLWFwcC8uL25vZGVfbW9kdWxlcy9pMThuZXh0LWh0dHAtYmFja2VuZC9lc20vZ2V0RmV0Y2guY2pzPzY3NTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZldGNoQXBpXG5pZiAodHlwZW9mIGZldGNoID09PSAnZnVuY3Rpb24nKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyAmJiBnbG9iYWwuZmV0Y2gpIHtcbiAgICBmZXRjaEFwaSA9IGdsb2JhbC5mZXRjaFxuICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5mZXRjaCkge1xuICAgIGZldGNoQXBpID0gd2luZG93LmZldGNoXG4gIH0gZWxzZSB7XG4gICAgZmV0Y2hBcGkgPSBmZXRjaFxuICB9XG59XG5cbmlmICh0eXBlb2YgcmVxdWlyZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgdmFyIGYgPSBmZXRjaEFwaSB8fCByZXF1aXJlKCdjcm9zcy1mZXRjaCcpXG4gIGlmIChmLmRlZmF1bHQpIGYgPSBmLmRlZmF1bHRcbiAgZXhwb3J0cy5kZWZhdWx0ID0gZlxuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdFxufVxuIl0sIm5hbWVzIjpbImZldGNoQXBpIiwiZmV0Y2giLCJnbG9iYWwiLCJ3aW5kb3ciLCJyZXF1aXJlIiwiZiIsImRlZmF1bHQiLCJleHBvcnRzIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/i18next-http-backend/esm/getFetch.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/i18next-http-backend/esm/index.js":
/*!********************************************************!*\
  !*** ./node_modules/i18next-http-backend/esm/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/i18next-http-backend/esm/utils.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request.js */ \"(ssr)/./node_modules/i18next-http-backend/esm/request.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\nvar getDefaults = function getDefaults() {\n    return {\n        loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n        addPath: \"/locales/add/{{lng}}/{{ns}}\",\n        parse: function parse(data) {\n            return JSON.parse(data);\n        },\n        stringify: JSON.stringify,\n        parsePayload: function parsePayload(namespace, key, fallbackValue) {\n            return _defineProperty({}, key, fallbackValue || \"\");\n        },\n        parseLoadPayload: function parseLoadPayload(languages, namespaces) {\n            return undefined;\n        },\n        request: _request_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        reloadInterval:  false ? 0 : 60 * 60 * 1000,\n        customHeaders: {},\n        queryStringParams: {},\n        crossDomain: false,\n        withCredentials: false,\n        overrideMimeType: false,\n        requestOptions: {\n            mode: \"cors\",\n            credentials: \"same-origin\",\n            cache: \"default\"\n        }\n    };\n};\nvar Backend = function() {\n    function Backend(services) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        _classCallCheck(this, Backend);\n        this.services = services;\n        this.options = options;\n        this.allOptions = allOptions;\n        this.type = \"backend\";\n        this.init(services, options, allOptions);\n    }\n    return _createClass(Backend, [\n        {\n            key: \"init\",\n            value: function init(services) {\n                var _this = this;\n                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                this.services = services;\n                this.options = _objectSpread(_objectSpread(_objectSpread({}, getDefaults()), this.options || {}), options);\n                this.allOptions = allOptions;\n                if (this.services && this.options.reloadInterval) {\n                    var timer = setInterval(function() {\n                        return _this.reload();\n                    }, this.options.reloadInterval);\n                    if (_typeof(timer) === \"object\" && typeof timer.unref === \"function\") timer.unref();\n                }\n            }\n        },\n        {\n            key: \"readMulti\",\n            value: function readMulti(languages, namespaces, callback) {\n                this._readAny(languages, languages, namespaces, namespaces, callback);\n            }\n        },\n        {\n            key: \"read\",\n            value: function read(language, namespace, callback) {\n                this._readAny([\n                    language\n                ], language, [\n                    namespace\n                ], namespace, callback);\n            }\n        },\n        {\n            key: \"_readAny\",\n            value: function _readAny(languages, loadUrlLanguages, namespaces, loadUrlNamespaces, callback) {\n                var _this2 = this;\n                var loadPath = this.options.loadPath;\n                if (typeof this.options.loadPath === \"function\") {\n                    loadPath = this.options.loadPath(languages, namespaces);\n                }\n                loadPath = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.makePromise)(loadPath);\n                loadPath.then(function(resolvedLoadPath) {\n                    if (!resolvedLoadPath) return callback(null, {});\n                    var url = _this2.services.interpolator.interpolate(resolvedLoadPath, {\n                        lng: languages.join(\"+\"),\n                        ns: namespaces.join(\"+\")\n                    });\n                    _this2.loadUrl(url, callback, loadUrlLanguages, loadUrlNamespaces);\n                });\n            }\n        },\n        {\n            key: \"loadUrl\",\n            value: function loadUrl(url, callback, languages, namespaces) {\n                var _this3 = this;\n                var lng = typeof languages === \"string\" ? [\n                    languages\n                ] : languages;\n                var ns = typeof namespaces === \"string\" ? [\n                    namespaces\n                ] : namespaces;\n                var payload = this.options.parseLoadPayload(lng, ns);\n                this.options.request(this.options, url, payload, function(err, res) {\n                    if (res && (res.status >= 500 && res.status < 600 || !res.status)) return callback(\"failed loading \" + url + \"; status code: \" + res.status, true);\n                    if (res && res.status >= 400 && res.status < 500) return callback(\"failed loading \" + url + \"; status code: \" + res.status, false);\n                    if (!res && err && err.message && err.message.indexOf(\"Failed to fetch\") > -1) return callback(\"failed loading \" + url + \": \" + err.message, true);\n                    if (err) return callback(err, false);\n                    var ret, parseErr;\n                    try {\n                        if (typeof res.data === \"string\") {\n                            ret = _this3.options.parse(res.data, languages, namespaces);\n                        } else {\n                            ret = res.data;\n                        }\n                    } catch (e) {\n                        parseErr = \"failed parsing \" + url + \" to json\";\n                    }\n                    if (parseErr) return callback(parseErr, false);\n                    callback(null, ret);\n                });\n            }\n        },\n        {\n            key: \"create\",\n            value: function create(languages, namespace, key, fallbackValue, callback) {\n                var _this4 = this;\n                if (!this.options.addPath) return;\n                if (typeof languages === \"string\") languages = [\n                    languages\n                ];\n                var payload = this.options.parsePayload(namespace, key, fallbackValue);\n                var finished = 0;\n                var dataArray = [];\n                var resArray = [];\n                languages.forEach(function(lng) {\n                    var addPath = _this4.options.addPath;\n                    if (typeof _this4.options.addPath === \"function\") {\n                        addPath = _this4.options.addPath(lng, namespace);\n                    }\n                    var url = _this4.services.interpolator.interpolate(addPath, {\n                        lng: lng,\n                        ns: namespace\n                    });\n                    _this4.options.request(_this4.options, url, payload, function(data, res) {\n                        finished += 1;\n                        dataArray.push(data);\n                        resArray.push(res);\n                        if (finished === languages.length) {\n                            if (typeof callback === \"function\") callback(dataArray, resArray);\n                        }\n                    });\n                });\n            }\n        },\n        {\n            key: \"reload\",\n            value: function reload() {\n                var _this5 = this;\n                var _this$services = this.services, backendConnector = _this$services.backendConnector, languageUtils = _this$services.languageUtils, logger = _this$services.logger;\n                var currentLanguage = backendConnector.language;\n                if (currentLanguage && currentLanguage.toLowerCase() === \"cimode\") return;\n                var toLoad = [];\n                var append = function append(lng) {\n                    var lngs = languageUtils.toResolveHierarchy(lng);\n                    lngs.forEach(function(l) {\n                        if (toLoad.indexOf(l) < 0) toLoad.push(l);\n                    });\n                };\n                append(currentLanguage);\n                if (this.allOptions.preload) this.allOptions.preload.forEach(function(l) {\n                    return append(l);\n                });\n                toLoad.forEach(function(lng) {\n                    _this5.allOptions.ns.forEach(function(ns) {\n                        backendConnector.read(lng, ns, \"read\", null, null, function(err, data) {\n                            if (err) logger.warn(\"loading namespace \".concat(ns, \" for language \").concat(lng, \" failed\"), err);\n                            if (!err && data) logger.log(\"loaded namespace \".concat(ns, \" for language \").concat(lng), data);\n                            backendConnector.loaded(\"\".concat(lng, \"|\").concat(ns), err, data);\n                        });\n                    });\n                });\n            }\n        }\n    ]);\n}();\nBackend.type = \"backend\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Backend);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/i18next-http-backend/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/i18next-http-backend/esm/request.js":
/*!**********************************************************!*\
  !*** ./node_modules/i18next-http-backend/esm/request.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var _getFetch_cjs__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/i18next-http-backend/esm/utils.js\");\n/* harmony import */ var _getFetch_cjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getFetch.cjs */ \"(ssr)/./node_modules/i18next-http-backend/esm/getFetch.cjs\");\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\n\n\nvar fetchApi;\nif (typeof fetch === \"function\") {\n    if (typeof global !== \"undefined\" && global.fetch) {\n        fetchApi = global.fetch;\n    } else if (false) {} else {\n        fetchApi = fetch;\n    }\n}\nvar XmlHttpRequestApi;\nif ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasXMLHttpRequest)()) {\n    if (typeof global !== \"undefined\" && global.XMLHttpRequest) {\n        XmlHttpRequestApi = global.XMLHttpRequest;\n    } else if (false) {}\n}\nvar ActiveXObjectApi;\nif (typeof ActiveXObject === \"function\") {\n    if (typeof global !== \"undefined\" && global.ActiveXObject) {\n        ActiveXObjectApi = global.ActiveXObject;\n    } else if (false) {}\n}\nif (!fetchApi && /*#__PURE__*/ (_getFetch_cjs__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_getFetch_cjs__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_getFetch_cjs__WEBPACK_IMPORTED_MODULE_1__, 2))) && !XmlHttpRequestApi && !ActiveXObjectApi) fetchApi = _getFetch_cjs__WEBPACK_IMPORTED_MODULE_1__ || /*#__PURE__*/ (_getFetch_cjs__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_getFetch_cjs__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_getFetch_cjs__WEBPACK_IMPORTED_MODULE_1__, 2)));\nif (typeof fetchApi !== \"function\") fetchApi = undefined;\nvar addQueryString = function addQueryString(url, params) {\n    if (params && _typeof(params) === \"object\") {\n        var queryString = \"\";\n        for(var paramName in params){\n            queryString += \"&\" + encodeURIComponent(paramName) + \"=\" + encodeURIComponent(params[paramName]);\n        }\n        if (!queryString) return url;\n        url = url + (url.indexOf(\"?\") !== -1 ? \"&\" : \"?\") + queryString.slice(1);\n    }\n    return url;\n};\nvar fetchIt = function fetchIt(url, fetchOptions, callback, altFetch) {\n    var resolver = function resolver(response) {\n        if (!response.ok) return callback(response.statusText || \"Error\", {\n            status: response.status\n        });\n        response.text().then(function(data) {\n            callback(null, {\n                status: response.status,\n                data: data\n            });\n        }).catch(callback);\n    };\n    if (altFetch) {\n        var altResponse = altFetch(url, fetchOptions);\n        if (altResponse instanceof Promise) {\n            altResponse.then(resolver).catch(callback);\n            return;\n        }\n    }\n    if (typeof fetch === \"function\") {\n        fetch(url, fetchOptions).then(resolver).catch(callback);\n    } else {\n        fetchApi(url, fetchOptions).then(resolver).catch(callback);\n    }\n};\nvar omitFetchOptions = false;\nvar requestWithFetch = function requestWithFetch(options, url, payload, callback) {\n    if (options.queryStringParams) {\n        url = addQueryString(url, options.queryStringParams);\n    }\n    var headers = _objectSpread({}, typeof options.customHeaders === \"function\" ? options.customHeaders() : options.customHeaders);\n    if ( true && typeof global !== \"undefined\" && typeof global.process !== \"undefined\" && global.process.versions && global.process.versions.node) {\n        headers[\"User-Agent\"] = \"i18next-http-backend (node/\".concat(global.process.version, \"; \").concat(global.process.platform, \" \").concat(global.process.arch, \")\");\n    }\n    if (payload) headers[\"Content-Type\"] = \"application/json\";\n    var reqOptions = typeof options.requestOptions === \"function\" ? options.requestOptions(payload) : options.requestOptions;\n    var fetchOptions = _objectSpread({\n        method: payload ? \"POST\" : \"GET\",\n        body: payload ? options.stringify(payload) : undefined,\n        headers: headers\n    }, omitFetchOptions ? {} : reqOptions);\n    var altFetch = typeof options.alternateFetch === \"function\" && options.alternateFetch.length >= 1 ? options.alternateFetch : undefined;\n    try {\n        fetchIt(url, fetchOptions, callback, altFetch);\n    } catch (e) {\n        if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf(\"not implemented\") < 0) {\n            return callback(e);\n        }\n        try {\n            Object.keys(reqOptions).forEach(function(opt) {\n                delete fetchOptions[opt];\n            });\n            fetchIt(url, fetchOptions, callback, altFetch);\n            omitFetchOptions = true;\n        } catch (err) {\n            callback(err);\n        }\n    }\n};\nvar requestWithXmlHttpRequest = function requestWithXmlHttpRequest(options, url, payload, callback) {\n    if (payload && _typeof(payload) === \"object\") {\n        payload = addQueryString(\"\", payload).slice(1);\n    }\n    if (options.queryStringParams) {\n        url = addQueryString(url, options.queryStringParams);\n    }\n    try {\n        var x;\n        if (XmlHttpRequestApi) {\n            x = new XmlHttpRequestApi();\n        } else {\n            x = new ActiveXObjectApi(\"MSXML2.XMLHTTP.3.0\");\n        }\n        x.open(payload ? \"POST\" : \"GET\", url, 1);\n        if (!options.crossDomain) {\n            x.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        }\n        x.withCredentials = !!options.withCredentials;\n        if (payload) {\n            x.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        }\n        if (x.overrideMimeType) {\n            x.overrideMimeType(\"application/json\");\n        }\n        var h = options.customHeaders;\n        h = typeof h === \"function\" ? h() : h;\n        if (h) {\n            for(var i in h){\n                x.setRequestHeader(i, h[i]);\n            }\n        }\n        x.onreadystatechange = function() {\n            x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, {\n                status: x.status,\n                data: x.responseText\n            });\n        };\n        x.send(payload);\n    } catch (e) {\n        console && console.log(e);\n    }\n};\nvar request = function request(options, url, payload, callback) {\n    if (typeof payload === \"function\") {\n        callback = payload;\n        payload = undefined;\n    }\n    callback = callback || function() {};\n    if (fetchApi && url.indexOf(\"file:\") !== 0) {\n        return requestWithFetch(options, url, payload, callback);\n    }\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasXMLHttpRequest)() || typeof ActiveXObject === \"function\") {\n        return requestWithXmlHttpRequest(options, url, payload, callback);\n    }\n    callback(new Error(\"No fetch and no xhr implementation found!\"));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (request);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaTE4bmV4dC1odHRwLWJhY2tlbmQvZXNtL3JlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLFFBQVFDLENBQUMsRUFBRUMsQ0FBQztJQUFJLElBQUlDLElBQUlDLE9BQU9DLElBQUksQ0FBQ0o7SUFBSSxJQUFJRyxPQUFPRSxxQkFBcUIsRUFBRTtRQUFFLElBQUlDLElBQUlILE9BQU9FLHFCQUFxQixDQUFDTDtRQUFJQyxLQUFNSyxDQUFBQSxJQUFJQSxFQUFFQyxNQUFNLENBQUMsU0FBVU4sQ0FBQztZQUFJLE9BQU9FLE9BQU9LLHdCQUF3QixDQUFDUixHQUFHQyxHQUFHUSxVQUFVO1FBQUUsRUFBQyxHQUFJUCxFQUFFUSxJQUFJLENBQUNDLEtBQUssQ0FBQ1QsR0FBR0k7SUFBSTtJQUFFLE9BQU9KO0FBQUc7QUFDOVAsU0FBU1UsY0FBY1osQ0FBQztJQUFJLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJWSxVQUFVQyxNQUFNLEVBQUViLElBQUs7UUFBRSxJQUFJQyxJQUFJLFFBQVFXLFNBQVMsQ0FBQ1osRUFBRSxHQUFHWSxTQUFTLENBQUNaLEVBQUUsR0FBRyxDQUFDO1FBQUdBLElBQUksSUFBSUYsUUFBUUksT0FBT0QsSUFBSSxDQUFDLEdBQUdhLE9BQU8sQ0FBQyxTQUFVZCxDQUFDO1lBQUllLGdCQUFnQmhCLEdBQUdDLEdBQUdDLENBQUMsQ0FBQ0QsRUFBRTtRQUFHLEtBQUtFLE9BQU9jLHlCQUF5QixHQUFHZCxPQUFPZSxnQkFBZ0IsQ0FBQ2xCLEdBQUdHLE9BQU9jLHlCQUF5QixDQUFDZixNQUFNSCxRQUFRSSxPQUFPRCxJQUFJYSxPQUFPLENBQUMsU0FBVWQsQ0FBQztZQUFJRSxPQUFPZ0IsY0FBYyxDQUFDbkIsR0FBR0MsR0FBR0UsT0FBT0ssd0JBQXdCLENBQUNOLEdBQUdEO1FBQUs7SUFBSTtJQUFFLE9BQU9EO0FBQUc7QUFDdGIsU0FBU2dCLGdCQUFnQkksR0FBRyxFQUFFQyxHQUFH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QUFHNkUsQ0FBQyxDQUFDN0UsRUFBRTtZQUM1QjtRQUNGO1FBQ0F1RSxFQUFFTyxrQkFBa0IsR0FBRztZQUNyQlAsRUFBRVEsVUFBVSxHQUFHLEtBQUs3QyxTQUFTcUMsRUFBRS9CLE1BQU0sSUFBSSxNQUFNK0IsRUFBRWhDLFVBQVUsR0FBRyxNQUFNO2dCQUNsRUMsUUFBUStCLEVBQUUvQixNQUFNO2dCQUNoQkcsTUFBTTRCLEVBQUVTLFlBQVk7WUFDdEI7UUFDRjtRQUNBVCxFQUFFVSxJQUFJLENBQUMvQjtJQUNULEVBQUUsT0FBTzVFLEdBQUc7UUFDVjRHLFdBQVdBLFFBQVFDLEdBQUcsQ0FBQzdHO0lBQ3pCO0FBQ0Y7QUFDQSxJQUFJOEcsVUFBVSxTQUFTQSxRQUFRbkMsT0FBTyxFQUFFeEIsR0FBRyxFQUFFeUIsT0FBTyxFQUFFaEIsUUFBUTtJQUM1RCxJQUFJLE9BQU9nQixZQUFZLFlBQVk7UUFDakNoQixXQUFXZ0I7UUFDWEEsVUFBVTNCO0lBQ1o7SUFDQVcsV0FBV0EsWUFBWSxZQUFhO0lBQ3BDLElBQUlwQixZQUFZVyxJQUFJSyxPQUFPLENBQUMsYUFBYSxHQUFHO1FBQzFDLE9BQU9rQixpQkFBaUJDLFNBQVN4QixLQUFLeUIsU0FBU2hCO0lBQ2pEO0lBQ0EsSUFBSXRCLDREQUFpQkEsTUFBTSxPQUFPUyxrQkFBa0IsWUFBWTtRQUM5RCxPQUFPaUQsMEJBQTBCckIsU0FBU3hCLEtBQUt5QixTQUFTaEI7SUFDMUQ7SUFDQUEsU0FBUyxJQUFJbUQsTUFBTTtBQUNyQjtBQUNBLGlFQUFlRCxPQUFPQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FmcmEtYXBwLy4vbm9kZV9tb2R1bGVzL2kxOG5leHQtaHR0cC1iYWNrZW5kL2VzbS9yZXF1ZXN0LmpzPzU2MDIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmltcG9ydCB7IGhhc1hNTEh0dHBSZXF1ZXN0IH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgKiBhcyBmZXRjaE5vZGUgZnJvbSAnLi9nZXRGZXRjaC5janMnO1xudmFyIGZldGNoQXBpO1xuaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ2Z1bmN0aW9uJykge1xuICBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgJiYgZ2xvYmFsLmZldGNoKSB7XG4gICAgZmV0Y2hBcGkgPSBnbG9iYWwuZmV0Y2g7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmZldGNoKSB7XG4gICAgZmV0Y2hBcGkgPSB3aW5kb3cuZmV0Y2g7XG4gIH0gZWxzZSB7XG4gICAgZmV0Y2hBcGkgPSBmZXRjaDtcbiAgfVxufVxudmFyIFhtbEh0dHBSZXF1ZXN0QXBpO1xuaWYgKGhhc1hNTEh0dHBSZXF1ZXN0KCkpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbC5YTUxIdHRwUmVxdWVzdCkge1xuICAgIFhtbEh0dHBSZXF1ZXN0QXBpID0gZ2xvYmFsLlhNTEh0dHBSZXF1ZXN0O1xuICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5YTUxIdHRwUmVxdWVzdCkge1xuICAgIFhtbEh0dHBSZXF1ZXN0QXBpID0gd2luZG93LlhNTEh0dHBSZXF1ZXN0O1xuICB9XG59XG52YXIgQWN0aXZlWE9iamVjdEFwaTtcbmlmICh0eXBlb2YgQWN0aXZlWE9iamVjdCA9PT0gJ2Z1bmN0aW9uJykge1xuICBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgJiYgZ2xvYmFsLkFjdGl2ZVhPYmplY3QpIHtcbiAgICBBY3RpdmVYT2JqZWN0QXBpID0gZ2xvYmFsLkFjdGl2ZVhPYmplY3Q7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LkFjdGl2ZVhPYmplY3QpIHtcbiAgICBBY3RpdmVYT2JqZWN0QXBpID0gd2luZG93LkFjdGl2ZVhPYmplY3Q7XG4gIH1cbn1cbmlmICghZmV0Y2hBcGkgJiYgZmV0Y2hOb2RlICYmICFYbWxIdHRwUmVxdWVzdEFwaSAmJiAhQWN0aXZlWE9iamVjdEFwaSkgZmV0Y2hBcGkgPSBmZXRjaE5vZGUuZGVmYXVsdCB8fCBmZXRjaE5vZGU7XG5pZiAodHlwZW9mIGZldGNoQXBpICE9PSAnZnVuY3Rpb24nKSBmZXRjaEFwaSA9IHVuZGVmaW5lZDtcbnZhciBhZGRRdWVyeVN0cmluZyA9IGZ1bmN0aW9uIGFkZFF1ZXJ5U3RyaW5nKHVybCwgcGFyYW1zKSB7XG4gIGlmIChwYXJhbXMgJiYgX3R5cGVvZihwYXJhbXMpID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBxdWVyeVN0cmluZyA9ICcnO1xuICAgIGZvciAodmFyIHBhcmFtTmFtZSBpbiBwYXJhbXMpIHtcbiAgICAgIHF1ZXJ5U3RyaW5nICs9ICcmJyArIGVuY29kZVVSSUNvbXBvbmVudChwYXJhbU5hbWUpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHBhcmFtc1twYXJhbU5hbWVdKTtcbiAgICB9XG4gICAgaWYgKCFxdWVyeVN0cmluZykgcmV0dXJuIHVybDtcbiAgICB1cmwgPSB1cmwgKyAodXJsLmluZGV4T2YoJz8nKSAhPT0gLTEgPyAnJicgOiAnPycpICsgcXVlcnlTdHJpbmcuc2xpY2UoMSk7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07XG52YXIgZmV0Y2hJdCA9IGZ1bmN0aW9uIGZldGNoSXQodXJsLCBmZXRjaE9wdGlvbnMsIGNhbGxiYWNrLCBhbHRGZXRjaCkge1xuICB2YXIgcmVzb2x2ZXIgPSBmdW5jdGlvbiByZXNvbHZlcihyZXNwb25zZSkge1xuICAgIGlmICghcmVzcG9uc2Uub2spIHJldHVybiBjYWxsYmFjayhyZXNwb25zZS5zdGF0dXNUZXh0IHx8ICdFcnJvcicsIHtcbiAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzXG4gICAgfSk7XG4gICAgcmVzcG9uc2UudGV4dCgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGNhbGxiYWNrKG51bGwsIHtcbiAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgIGRhdGE6IGRhdGFcbiAgICAgIH0pO1xuICAgIH0pLmNhdGNoKGNhbGxiYWNrKTtcbiAgfTtcbiAgaWYgKGFsdEZldGNoKSB7XG4gICAgdmFyIGFsdFJlc3BvbnNlID0gYWx0RmV0Y2godXJsLCBmZXRjaE9wdGlvbnMpO1xuICAgIGlmIChhbHRSZXNwb25zZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgIGFsdFJlc3BvbnNlLnRoZW4ocmVzb2x2ZXIpLmNhdGNoKGNhbGxiYWNrKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cbiAgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZldGNoKHVybCwgZmV0Y2hPcHRpb25zKS50aGVuKHJlc29sdmVyKS5jYXRjaChjYWxsYmFjayk7XG4gIH0gZWxzZSB7XG4gICAgZmV0Y2hBcGkodXJsLCBmZXRjaE9wdGlvbnMpLnRoZW4ocmVzb2x2ZXIpLmNhdGNoKGNhbGxiYWNrKTtcbiAgfVxufTtcbnZhciBvbWl0RmV0Y2hPcHRpb25zID0gZmFsc2U7XG52YXIgcmVxdWVzdFdpdGhGZXRjaCA9IGZ1bmN0aW9uIHJlcXVlc3RXaXRoRmV0Y2gob3B0aW9ucywgdXJsLCBwYXlsb2FkLCBjYWxsYmFjaykge1xuICBpZiAob3B0aW9ucy5xdWVyeVN0cmluZ1BhcmFtcykge1xuICAgIHVybCA9IGFkZFF1ZXJ5U3RyaW5nKHVybCwgb3B0aW9ucy5xdWVyeVN0cmluZ1BhcmFtcyk7XG4gIH1cbiAgdmFyIGhlYWRlcnMgPSBfb2JqZWN0U3ByZWFkKHt9LCB0eXBlb2Ygb3B0aW9ucy5jdXN0b21IZWFkZXJzID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5jdXN0b21IZWFkZXJzKCkgOiBvcHRpb25zLmN1c3RvbUhlYWRlcnMpO1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGdsb2JhbC5wcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBnbG9iYWwucHJvY2Vzcy52ZXJzaW9ucyAmJiBnbG9iYWwucHJvY2Vzcy52ZXJzaW9ucy5ub2RlKSB7XG4gICAgaGVhZGVyc1snVXNlci1BZ2VudCddID0gXCJpMThuZXh0LWh0dHAtYmFja2VuZCAobm9kZS9cIi5jb25jYXQoZ2xvYmFsLnByb2Nlc3MudmVyc2lvbiwgXCI7IFwiKS5jb25jYXQoZ2xvYmFsLnByb2Nlc3MucGxhdGZvcm0sIFwiIFwiKS5jb25jYXQoZ2xvYmFsLnByb2Nlc3MuYXJjaCwgXCIpXCIpO1xuICB9XG4gIGlmIChwYXlsb2FkKSBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgdmFyIHJlcU9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucy5yZXF1ZXN0T3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJyA/IG9wdGlvbnMucmVxdWVzdE9wdGlvbnMocGF5bG9hZCkgOiBvcHRpb25zLnJlcXVlc3RPcHRpb25zO1xuICB2YXIgZmV0Y2hPcHRpb25zID0gX29iamVjdFNwcmVhZCh7XG4gICAgbWV0aG9kOiBwYXlsb2FkID8gJ1BPU1QnIDogJ0dFVCcsXG4gICAgYm9keTogcGF5bG9hZCA/IG9wdGlvbnMuc3RyaW5naWZ5KHBheWxvYWQpIDogdW5kZWZpbmVkLFxuICAgIGhlYWRlcnM6IGhlYWRlcnNcbiAgfSwgb21pdEZldGNoT3B0aW9ucyA/IHt9IDogcmVxT3B0aW9ucyk7XG4gIHZhciBhbHRGZXRjaCA9IHR5cGVvZiBvcHRpb25zLmFsdGVybmF0ZUZldGNoID09PSAnZnVuY3Rpb24nICYmIG9wdGlvbnMuYWx0ZXJuYXRlRmV0Y2gubGVuZ3RoID49IDEgPyBvcHRpb25zLmFsdGVybmF0ZUZldGNoIDogdW5kZWZpbmVkO1xuICB0cnkge1xuICAgIGZldGNoSXQodXJsLCBmZXRjaE9wdGlvbnMsIGNhbGxiYWNrLCBhbHRGZXRjaCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoIXJlcU9wdGlvbnMgfHwgT2JqZWN0LmtleXMocmVxT3B0aW9ucykubGVuZ3RoID09PSAwIHx8ICFlLm1lc3NhZ2UgfHwgZS5tZXNzYWdlLmluZGV4T2YoJ25vdCBpbXBsZW1lbnRlZCcpIDwgMCkge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKGUpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgT2JqZWN0LmtleXMocmVxT3B0aW9ucykuZm9yRWFjaChmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgIGRlbGV0ZSBmZXRjaE9wdGlvbnNbb3B0XTtcbiAgICAgIH0pO1xuICAgICAgZmV0Y2hJdCh1cmwsIGZldGNoT3B0aW9ucywgY2FsbGJhY2ssIGFsdEZldGNoKTtcbiAgICAgIG9taXRGZXRjaE9wdGlvbnMgPSB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICB9XG4gIH1cbn07XG52YXIgcmVxdWVzdFdpdGhYbWxIdHRwUmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3RXaXRoWG1sSHR0cFJlcXVlc3Qob3B0aW9ucywgdXJsLCBwYXlsb2FkLCBjYWxsYmFjaykge1xuICBpZiAocGF5bG9hZCAmJiBfdHlwZW9mKHBheWxvYWQpID09PSAnb2JqZWN0Jykge1xuICAgIHBheWxvYWQgPSBhZGRRdWVyeVN0cmluZygnJywgcGF5bG9hZCkuc2xpY2UoMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMucXVlcnlTdHJpbmdQYXJhbXMpIHtcbiAgICB1cmwgPSBhZGRRdWVyeVN0cmluZyh1cmwsIG9wdGlvbnMucXVlcnlTdHJpbmdQYXJhbXMpO1xuICB9XG4gIHRyeSB7XG4gICAgdmFyIHg7XG4gICAgaWYgKFhtbEh0dHBSZXF1ZXN0QXBpKSB7XG4gICAgICB4ID0gbmV3IFhtbEh0dHBSZXF1ZXN0QXBpKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHggPSBuZXcgQWN0aXZlWE9iamVjdEFwaSgnTVNYTUwyLlhNTEhUVFAuMy4wJyk7XG4gICAgfVxuICAgIHgub3BlbihwYXlsb2FkID8gJ1BPU1QnIDogJ0dFVCcsIHVybCwgMSk7XG4gICAgaWYgKCFvcHRpb25zLmNyb3NzRG9tYWluKSB7XG4gICAgICB4LnNldFJlcXVlc3RIZWFkZXIoJ1gtUmVxdWVzdGVkLVdpdGgnLCAnWE1MSHR0cFJlcXVlc3QnKTtcbiAgICB9XG4gICAgeC53aXRoQ3JlZGVudGlhbHMgPSAhIW9wdGlvbnMud2l0aENyZWRlbnRpYWxzO1xuICAgIGlmIChwYXlsb2FkKSB7XG4gICAgICB4LnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKTtcbiAgICB9XG4gICAgaWYgKHgub3ZlcnJpZGVNaW1lVHlwZSkge1xuICAgICAgeC5vdmVycmlkZU1pbWVUeXBlKCdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgfVxuICAgIHZhciBoID0gb3B0aW9ucy5jdXN0b21IZWFkZXJzO1xuICAgIGggPSB0eXBlb2YgaCA9PT0gJ2Z1bmN0aW9uJyA/IGgoKSA6IGg7XG4gICAgaWYgKGgpIHtcbiAgICAgIGZvciAodmFyIGkgaW4gaCkge1xuICAgICAgICB4LnNldFJlcXVlc3RIZWFkZXIoaSwgaFtpXSk7XG4gICAgICB9XG4gICAgfVxuICAgIHgub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgeC5yZWFkeVN0YXRlID4gMyAmJiBjYWxsYmFjayh4LnN0YXR1cyA+PSA0MDAgPyB4LnN0YXR1c1RleHQgOiBudWxsLCB7XG4gICAgICAgIHN0YXR1czogeC5zdGF0dXMsXG4gICAgICAgIGRhdGE6IHgucmVzcG9uc2VUZXh0XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHguc2VuZChwYXlsb2FkKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUgJiYgY29uc29sZS5sb2coZSk7XG4gIH1cbn07XG52YXIgcmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3Qob3B0aW9ucywgdXJsLCBwYXlsb2FkLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIHBheWxvYWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IHBheWxvYWQ7XG4gICAgcGF5bG9hZCA9IHVuZGVmaW5lZDtcbiAgfVxuICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uICgpIHt9O1xuICBpZiAoZmV0Y2hBcGkgJiYgdXJsLmluZGV4T2YoJ2ZpbGU6JykgIT09IDApIHtcbiAgICByZXR1cm4gcmVxdWVzdFdpdGhGZXRjaChvcHRpb25zLCB1cmwsIHBheWxvYWQsIGNhbGxiYWNrKTtcbiAgfVxuICBpZiAoaGFzWE1MSHR0cFJlcXVlc3QoKSB8fCB0eXBlb2YgQWN0aXZlWE9iamVjdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiByZXF1ZXN0V2l0aFhtbEh0dHBSZXF1ZXN0KG9wdGlvbnMsIHVybCwgcGF5bG9hZCwgY2FsbGJhY2spO1xuICB9XG4gIGNhbGxiYWNrKG5ldyBFcnJvcignTm8gZmV0Y2ggYW5kIG5vIHhociBpbXBsZW1lbnRhdGlvbiBmb3VuZCEnKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgcmVxdWVzdDsiXSwibmFtZXMiOlsib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImkiLCJfdG9QcmltaXRpdmUiLCJfdHlwZW9mIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsImhhc1hNTEh0dHBSZXF1ZXN0IiwiZmV0Y2hOb2RlIiwiZmV0Y2hBcGkiLCJmZXRjaCIsImdsb2JhbCIsIndpbmRvdyIsIlhtbEh0dHBSZXF1ZXN0QXBpIiwiWE1MSHR0cFJlcXVlc3QiLCJBY3RpdmVYT2JqZWN0QXBpIiwiQWN0aXZlWE9iamVjdCIsImRlZmF1bHQiLCJ1bmRlZmluZWQiLCJhZGRRdWVyeVN0cmluZyIsInVybCIsInBhcmFtcyIsInF1ZXJ5U3RyaW5nIiwicGFyYW1OYW1lIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiaW5kZXhPZiIsInNsaWNlIiwiZmV0Y2hJdCIsImZldGNoT3B0aW9ucyIsImNhbGxiYWNrIiwiYWx0RmV0Y2giLCJyZXNvbHZlciIsInJlc3BvbnNlIiwib2siLCJzdGF0dXNUZXh0Iiwic3RhdHVzIiwidGV4dCIsInRoZW4iLCJkYXRhIiwiY2F0Y2giLCJhbHRSZXNwb25zZSIsIlByb21pc2UiLCJvbWl0RmV0Y2hPcHRpb25zIiwicmVxdWVzdFdpdGhGZXRjaCIsIm9wdGlvbnMiLCJwYXlsb2FkIiwicXVlcnlTdHJpbmdQYXJhbXMiLCJoZWFkZXJzIiwiY3VzdG9tSGVhZGVycyIsInByb2Nlc3MiLCJ2ZXJzaW9ucyIsIm5vZGUiLCJjb25jYXQiLCJ2ZXJzaW9uIiwicGxhdGZvcm0iLCJhcmNoIiwicmVxT3B0aW9ucyIsInJlcXVlc3RPcHRpb25zIiwibWV0aG9kIiwiYm9keSIsInN0cmluZ2lmeSIsImFsdGVybmF0ZUZldGNoIiwibWVzc2FnZSIsIm9wdCIsImVyciIsInJlcXVlc3RXaXRoWG1sSHR0cFJlcXVlc3QiLCJ4Iiwib3BlbiIsImNyb3NzRG9tYWluIiwic2V0UmVxdWVzdEhlYWRlciIsIndpdGhDcmVkZW50aWFscyIsIm92ZXJyaWRlTWltZVR5cGUiLCJoIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlVGV4dCIsInNlbmQiLCJjb25zb2xlIiwibG9nIiwicmVxdWVzdCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/i18next-http-backend/esm/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/i18next-http-backend/esm/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/i18next-http-backend/esm/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaults: () => (/* binding */ defaults),\n/* harmony export */   hasXMLHttpRequest: () => (/* binding */ hasXMLHttpRequest),\n/* harmony export */   makePromise: () => (/* binding */ makePromise)\n/* harmony export */ });\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n    each.call(slice.call(arguments, 1), function(source) {\n        if (source) {\n            for(var prop in source){\n                if (obj[prop] === undefined) obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n}\nfunction hasXMLHttpRequest() {\n    return typeof XMLHttpRequest === \"function\" || (typeof XMLHttpRequest === \"undefined\" ? \"undefined\" : _typeof(XMLHttpRequest)) === \"object\";\n}\nfunction isPromise(maybePromise) {\n    return !!maybePromise && typeof maybePromise.then === \"function\";\n}\nfunction makePromise(maybePromise) {\n    if (isPromise(maybePromise)) {\n        return maybePromise;\n    }\n    return Promise.resolve(maybePromise);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaTE4bmV4dC1odHRwLWJhY2tlbmQvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLFNBQVNBLFFBQVFDLENBQUM7SUFBSTtJQUEyQixPQUFPRCxVQUFVLGNBQWMsT0FBT0UsVUFBVSxZQUFZLE9BQU9BLE9BQU9DLFFBQVEsR0FBRyxTQUFVRixDQUFDO1FBQUksT0FBTyxPQUFPQTtJQUFHLElBQUksU0FBVUEsQ0FBQztRQUFJLE9BQU9BLEtBQUssY0FBYyxPQUFPQyxVQUFVRCxFQUFFRyxXQUFXLEtBQUtGLFVBQVVELE1BQU1DLE9BQU9HLFNBQVMsR0FBRyxXQUFXLE9BQU9KO0lBQUcsR0FBR0QsUUFBUUM7QUFBSTtBQUM3VCxJQUFJSyxNQUFNLEVBQUU7QUFDWixJQUFJQyxPQUFPRCxJQUFJRSxPQUFPO0FBQ3RCLElBQUlDLFFBQVFILElBQUlHLEtBQUs7QUFDZCxTQUFTQyxTQUFTQyxHQUFHO0lBQzFCSixLQUFLSyxJQUFJLENBQUNILE1BQU1HLElBQUksQ0FBQ0MsV0FBVyxJQUFJLFNBQVVDLE1BQU07UUFDbEQsSUFBSUEsUUFBUTtZQUNWLElBQUssSUFBSUMsUUFBUUQsT0FBUTtnQkFDdkIsSUFBSUgsR0FBRyxDQUFDSSxLQUFLLEtBQUtDLFdBQVdMLEdBQUcsQ0FBQ0ksS0FBSyxHQUFHRCxNQUFNLENBQUNDLEtBQUs7WUFDdkQ7UUFDRjtJQUNGO0lBQ0EsT0FBT0o7QUFDVDtBQUNPLFNBQVNNO0lBQ2QsT0FBTyxPQUFPQyxtQkFBbUIsY0FBYyxDQUFDLE9BQU9BLG1CQUFtQixjQUFjLGNBQWNsQixRQUFRa0IsZUFBYyxNQUFPO0FBQ3JJO0FBQ0EsU0FBU0MsVUFBVUMsWUFBWTtJQUM3QixPQUFPLENBQUMsQ0FBQ0EsZ0JBQWdCLE9BQU9BLGFBQWFDLElBQUksS0FBSztBQUN4RDtBQUNPLFNBQVNDLFlBQVlGLFlBQVk7SUFDdEMsSUFBSUQsVUFBVUMsZUFBZTtRQUMzQixPQUFPQTtJQUNUO0lBQ0EsT0FBT0csUUFBUUMsT0FBTyxDQUFDSjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZnJhLWFwcC8uL25vZGVfbW9kdWxlcy9pMThuZXh0LWh0dHAtYmFja2VuZC9lc20vdXRpbHMuanM/YTFkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG52YXIgYXJyID0gW107XG52YXIgZWFjaCA9IGFyci5mb3JFYWNoO1xudmFyIHNsaWNlID0gYXJyLnNsaWNlO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRzKG9iaikge1xuICBlYWNoLmNhbGwoc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLCBmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZSkge1xuICAgICAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKG9ialtwcm9wXSA9PT0gdW5kZWZpbmVkKSBvYmpbcHJvcF0gPSBzb3VyY2VbcHJvcF07XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG9iajtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNYTUxIdHRwUmVxdWVzdCgpIHtcbiAgcmV0dXJuIHR5cGVvZiBYTUxIdHRwUmVxdWVzdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YoWE1MSHR0cFJlcXVlc3QpKSA9PT0gJ29iamVjdCc7XG59XG5mdW5jdGlvbiBpc1Byb21pc2UobWF5YmVQcm9taXNlKSB7XG4gIHJldHVybiAhIW1heWJlUHJvbWlzZSAmJiB0eXBlb2YgbWF5YmVQcm9taXNlLnRoZW4gPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnQgZnVuY3Rpb24gbWFrZVByb21pc2UobWF5YmVQcm9taXNlKSB7XG4gIGlmIChpc1Byb21pc2UobWF5YmVQcm9taXNlKSkge1xuICAgIHJldHVybiBtYXliZVByb21pc2U7XG4gIH1cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShtYXliZVByb21pc2UpO1xufSJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJhcnIiLCJlYWNoIiwiZm9yRWFjaCIsInNsaWNlIiwiZGVmYXVsdHMiLCJvYmoiLCJjYWxsIiwiYXJndW1lbnRzIiwic291cmNlIiwicHJvcCIsInVuZGVmaW5lZCIsImhhc1hNTEh0dHBSZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJpc1Byb21pc2UiLCJtYXliZVByb21pc2UiLCJ0aGVuIiwibWFrZVByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/i18next-http-backend/esm/utils.js\n");

/***/ })

};
;